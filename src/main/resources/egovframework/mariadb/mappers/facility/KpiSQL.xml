<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="apc.sl.facility.kpi.service.impl.KpiMapper">
	<select id="selectKpiListToCnt" resultType="int">
		SELECT COUNT(*) FROM sm_kpi_info
		WHERE 1=1
		<if test="searchCondition2 != ''">
			AND ex_year = #{searchCondition2}
		</if>
		<if test="searchCondition3 != ''">
			AND ex_month = #{searchCondition3}
		</if>
	</select>
	
	<select id="selectKpiList" resultType="egovMap">
		SELECT
			ki_id,
			ki_year,
			ki_month,
			cp_cut_qty,
			cp_bad_qty
		FROM sm_kpi_info
		WHERE 1=1
		<if test="searchCondition2 != ''">
			AND ex_year = #{searchCondition2}
		</if>
		<if test="searchCondition3 != ''">
			AND ex_month = #{searchCondition3}
		</if>
		ORDER BY ki_month DESC
		OFFSET #{firstIndex} ROWS
		FETCH NEXT #{recordCountPerPage} ROWS ONLY
	</select>
	
	<select id="selectKpiGraphList" resultType="egovMap">
		SELECT
			ex_idx,
			ex_year,
			ex_month,
			ex_trg_error,
			ex_trg_sales,
			(ex_760n + ex_760o + ex_760w + ex_560) AS totalCnt
		FROM sm_kpi_info
		WHERE 1=1
		<if test="searchCondition2 != ''">
			AND ex_year = #{searchCondition2}
		</if>
		<if test="searchCondition3 != ''">
			AND ex_month = #{searchCondition3}
		</if>
	</select>
	
	<select id="selectErrorOutput" resultType="egovMap">
		SELECT 
			DATE_FORMAT(pr_re_reg_dte, '%Y-%m') monthly,
			DATE_FORMAT(pr_re_reg_dte, '%Y') years,
			DATE_FORMAT(pr_re_reg_dte, '%m') MONTH,
			SUM(pr_re_cnt) cnt,
			SUM(pr_re_faulty_cnt) faulty,
			(SUM(pr_re_cnt)-SUM(pr_re_faulty_cnt)) prodCnt,
			ROUND((SUM(pr_re_faulty_cnt)/SUM(pr_re_cnt)*100),2) percent,
			0 money
		FROM sm_prod_result
		WHERE 1=1
		<if test="searchCondition2 != ''">
			AND DATE_FORMAT(pr_re_reg_dte, '%Y') = #{searchCondition2}
		</if>
		<if test="searchCondition3 != ''">
			AND FORMAT(DATE_FORMAT(pr_re_reg_dte, '%m'),0) = #{searchCondition3}
		</if>
		AND pr_list_nm = (SELECT pr_list_nm FROM sm_process_list
									WHERE pr_list_seq = (SELECT MAX(pr_list_seq) FROM sm_process_list))
		GROUP BY monthly
	</select>
	
	<select id="selectSales" resultType="egovMap">
		SELECT
			DATE_FORMAT(or_dte, '%Y-%m') monthly,
			DATE_FORMAT(or_dte, '%Y') years,
			DATE_FORMAT(or_dte, '%m') MONTH,
			ROUND(SUM(or_money/10000),1) money,
			0 prodCnt,
			0 percent
		FROM sm_orders
		WHERE 1=1
		<if test="searchCondition2 != ''">
			AND DATE_FORMAT(or_dte, '%Y') = #{searchCondition2}
		</if>
		<if test="searchCondition3 != ''">
			AND FORMAT(DATE_FORMAT(or_dte, '%m'),0) = #{searchCondition3}
		</if>
		GROUP BY monthly
	</select>
	
	<select id="selectExistsKpi" resultType="int">
		SELECT COUNT(*) FROM sm_kpi_info WHERE ex_year = #{exYear} AND ex_month = #{exMonth}
	</select>
	
	<select id="selectProdPerPriceInfo" resultType="egovMap">
		SELECT item_per_price FROM sm_item WHERE item_cd IN ('PD01','PD02','PD03','PD04')
	</select>
	
	<insert id="registKpi">
	
		DECLARE @MaxKiId INT;
		SET @MaxKiId = (SELECT ISNULL(MAX(a.ki_id), 0) FROM sm_kpi_info a);
	
		INSERT INTO sm_kpi_info
			(
			ki_id,
			ki_year,
			ki_month,
			ki_type,
			cp_cut_qty,			
			cp_bad_qty,
			ki_reg_id,
			ki_reg_date
			)
		VALUES
			(
			(SELECT CONCAT('KI', RIGHT('0000' + CAST(@MaxKiId + 1 AS VARCHAR(4)), 4))),
			#{kiYear},
			#{kiMonth},
			#{kiType},
			#{cpCutQty},
			#{cpBadQty},
			#{userId},
			GETDATE()
			)
	</insert>
	
	<select id="selectKpiInfo" resultType="egovMap">
		SELECT
			ex_idx,
			ex_year,
			ex_month,
			ex_760n,
			ex_760o,
			ex_760w,
			ex_560,
			ex_trg_error,
			ex_trg_sales
		FROM sm_kpi_info
		WHERE ex_idx = #{exIdx}
	</select>
	
	<update id="modifyKpi">
		UPDATE sm_kpi_info SET
			ex_year = #{exYear},
			ex_month = #{exMonth},
			ex_trg_error = #{exTrgError},
			ex_trg_sales = #{exTrgSales},
			ex_edt_dte = NOW(),
			ex_edt_mem = #{userId}
		WHERE ex_idx = #{exIdx}
	</update>
	
	<delete id="deleteKpi">
		DELETE FROM sm_kpi_info WHERE ki_id = #{kiId}
	</delete>
</mapper>
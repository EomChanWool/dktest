<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="apc.sl.pop.popCut.service.impl.PopCutMapper">
	<select id="selectCutListToCnt" resultType="int">
		SELECT COUNT(DISTINCT a.or_id) FROM sm_orders a
		LEFT JOIN
		sm_cut_prosess_stop b ON a.OR_ID = b.OR_ID
		WHERE 1=1
		AND or_process IN
		(0,1)

		<if test="searchKeyword != ''">
			AND a.or_id LIKE CONCAT('%',#{searchKeyword},'%')
		</if>

	</select>

	<select id="selectCutList" resultType="egovMap">
		SELECT a.or_id ,MAX(a.or_prod) AS or_prod, MAX(a.or_qty) AS or_qty,
		MAX(a.or_process) AS or_process,
		ISNULL(
		(
		SELECT TOP 1 cps_state
		FROM
		sm_cut_prosess_stop
		WHERE OR_ID = a.OR_ID
		ORDER BY cps_idx DESC
		),
		0
		) AS
		cps_state , MAX(b.cps_idx) AS cps_idx, MAX(cpl_manager) AS cpl_manager
		FROM sm_orders a
		LEFT JOIN
		sm_cut_prosess_stop b
		ON a.OR_ID =
		b.OR_ID
		LEFT JOIN sm_cut_proc_log c
		ON a.or_id = c.or_id
		WHERE 1=1
		AND or_process IN (0,
		1)
		<if test="searchKeyword != ''">
			AND a.or_id LIKE CONCAT('%',#{searchKeyword},'%')
		</if>
		GROUP BY a.or_id
		ORDER BY a.or_id DESC
		OFFSET #{firstIndex} ROWS
		FETCH
		NEXT
		#{recordCountPerPage} ROWS ONLY
	</select>

	<select id="selectCheckStop" resultType="int">
		SELECT COUNT(*) FROM sm_cut_prosess_stop
		WHERE or_id = #{orId}
		AND cps_state = 1
	</select>

	<select id="selectCutManager" resultType="egovMap">
	SELECT mi_name FROM sm_member_info
	WHERE MI_DEPARTMENT = '절단부'
	</select>

	<insert id="registCut">
		insert into sm_cut_proc (
		cp_cutno,
		eq_id,
		po_lotno,
		pi_item_type,
		cp_starttime,
		cp_endtime,
		cp_cut_qty,
		cp_bad_qty,
		cp_reg_id,
		cp_reg_date
		) values(
		#{cpCutno},
		#{eqId},
		#{poLotno},
		#{piItemType},
		#{cpStarttime},
		#{cpEndtime},
		#{cpCutQty},
		#{cpBadQty},
		#{userId},
		GETDATE()
		)
	</insert>

	<insert id="registCPLLog">
		INSERT INTO sm_cut_proc_log (
		or_id,
		cpl_st_date,
		cpl_manager,
		cpl_reg_id,
		cpl_reg_date
		) VALUES
		(
		#{orId},
		GETDATE(),
		#{cplManager},
		#{userId},
		GETDATE()
		)
	</insert>

	<insert id="registCStopLog">
		INSERT INTO sm_cut_prosess_stop (
		or_id,
		cps_state,
		cps_stop_time
		) VALUES
		(
		#{orId},
		1,
		GETDATE()
		)

	</insert>

	<update id="updateCSStopLog2">
		<!-- UPDATE sm_cut_prosess_stop SET
		cps_state = 2,
		cps_re_time = GETDATE(),
		CPS_REST_TIME = DATEDIFF(MINUTE,
		CPS_STOP_TIME, GETDATE())
		WHERE or_id = (
		SELECT TOP 1 or_id
		FROM
		sm_cut_prosess_stop
		WHERE or_id = #{orId}
		WHERE cps_idx = #{cpsIdx}
		ORDER BY CPS_STOP_TIME DESC
		) -->
		UPDATE sm_cut_prosess_stop SET
		cps_state = 2,
		cps_re_time = GETDATE(),
		CPS_REST_TIME = DATEDIFF(MINUTE,
		CPS_STOP_TIME, GETDATE())
		where cps_idx = #{cpsIdx}

	</update>

	<update id="updateOrProcess3">
		UPDATE sm_orders SET
		or_process = 2
		WHERE or_id
		=#{orId}
	</update>
	
	<update id="updateProcess3">
	UPDATE sm_orders SET
		or_process = 4
		WHERE or_id
		=#{orId}
	</update>

	<update id="updateLogEdtime">
		UPDATE sm_cut_proc_log SET
		cpl_ed_date = GETDATE(),
		cpl_work_time = DATEDIFF(MINUTE,cpl_st_date,getdate())
		WHERE or_id = #{orId}
		AND cpl_idx = (
		SELECT TOP 1 cpl_idx
		FROM
		sm_cut_proc_log
		WHERE or_id = #{orId}
		ORDER BY cpl_idx DESC
		)

	</update>


	<!-- <update id="updateProcess2"> -->
	<!-- UPDATE sm_process SET -->
	<!-- pr_cur_seq = (pr_cur_seq - 1), -->
	<!-- pr_cur_idx = (SELECT -->
	<!-- ${nextIdx} FROM sm_process WHERE wo_idx = -->
	<!-- #{woIdx}), -->
	<!-- pr_cur_nm = -->
	<!-- (SELECT pr_list_nm3 FROM sm_process WHERE wo_idx -->
	<!-- = -->
	<!-- #{woIdx}), -->
	<!-- pr_fin_cnt -->
	<!-- = (pr_fin_cnt - 1) -->
	<!-- WHERE wo_idx = #{woIdx} -->
	<!-- </update> -->

	<!-- <update id="modifyAnalysisData"> -->
	<!-- UPDATE sm_anlz_data SET -->
	<!-- az_brix_std = #{azBrixStd}, -->
	<!-- az_brix = #{azBrix}, -->
	<!-- az_water_std = #{azWaterStd}, -->
	<!-- az_water = -->
	<!-- #{azWater}, -->
	<!-- az_ph_std = #{azPhStd}, -->
	<!-- az_ph = #{azPh}, -->
	<!-- az_temp_std = -->
	<!-- #{azTempStd}, -->
	<!-- az_temp = #{azTemp}, -->
	<!-- az_viscosity_std = #{azViscosityStd}, -->
	<!-- az_viscosity = #{azViscosity}, -->
	<!-- az_sg_std = #{azSgStd}, -->
	<!-- az_sg = #{azSg} -->
	<!-- WHERE az_idx = #{azIdx} -->
	<!-- </update> -->



	<update id="updateOrState">
		UPDATE sm_orders SET
		or_process = 1
		WHERE or_id =
		#{orId}
	</update>

	<!-- <update id="updatePrReReSt"> -->
	<!-- UPDATE sm_prod_result a JOIN sm_work_order b ON -->
	<!-- a.WO_IDX=b.WO_IDX -->
	<!-- JOIN sm_analysis_info c ON b.WO_IDX=c.WO_IDX -->
	<!-- SET -->
	<!-- a.PR_RE_RE_ST = 'Y' -->
	<!-- WHERE a.WO_IDX = #{woIdx} -->
	<!-- AND a.pr_re_idx = ( -->
	<!-- SELECT -->
	<!-- MAX(pr_re_idx) -->
	<!-- FROM sm_prod_result -->
	<!-- WHERE WO_IDX = #{woIdx} -->
	<!-- ) -->

	<!-- </update> -->

	<!-- <delete id="deleteProdResult"> -->
	<!-- DELETE FROM sm_prod_result WHERE wo_idx = #{woIdx} -->
	<!-- AND PR_LIST_NM = '품질검사' -->
	<!-- </delete> -->

	<select id="selectOrderState" resultType="egovMap">
		SELECT b.or_state FROM
		sm_work_order a JOIN
		sm_orders b ON a.OR_IDX=b.OR_IDX
		WHERE a.wo_idx =
		#{woIdx}
	</select>



	<!-- <update id="updateDocumnetState"> -->
	<!-- UPDATE sm_document SET -->
	<!-- do_state = #{state} -->
	<!-- WHERE do_idx -->
	<!-- = #{doIdx} -->
	<!-- </update> -->
</mapper>
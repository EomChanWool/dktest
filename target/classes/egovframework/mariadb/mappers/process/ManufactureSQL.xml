<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="apc.sl.process.manufacture.service.impl.ManufactureMapper">

	<select id="selectManufactureListToCnt" resultType="int">
		SELECT COUNT(*) FROM sm_mf_proc
		WHERE 1=1
		AND mp_pr_state IN (0,1)

		<if test="searchKeyword != ''">
			AND or_id LIKE CONCAT('%',#{searchKeyword},'%')
		</if>


	</select>

	<select id="selectManufactureList" resultType="egovMap">
		<!-- SELECT a.or_id ,MAX(a.or_prod) AS or_prod, MAX(a.or_qty) AS or_qty, 
			MAX(a.or_process) AS or_process, ISNULL( ( SELECT TOP 1 mfs_state FROM sm_mf_process_stop 
			WHERE OR_ID = a.OR_ID ORDER BY mfs_idx DESC ), 0 ) AS mfs_state , MAX(b.mfs_idx) 
			AS mfs_idx , MAX(c.mfl_manager) AS mfl_manager, MAX(c.mfl_person) AS mfl_person 
			FROM sm_orders a LEFT JOIN sm_mf_process_stop b ON a.OR_ID = b.OR_ID LEFT 
			JOIN sm_mf_proc_log c ON a.or_id = c.or_id WHERE 1=1 AND or_process in (2,3) -->
		SELECT a.or_id, MAX(a.MP_MFNO) AS mp_mfno ,MAX(a.MP_PROD_NAME) AS
		mp_prod_name, MAX(a.MP_QTY) AS mp_qty , MAX(a.MP_PR_STATE) AS
		mp_pr_state,
		ISNULL(
		(
		SELECT TOP 1 mfs_state
		FROM
		sm_mf_process_stop
		WHERE OR_ID = a.OR_ID
		ORDER BY mfs_idx DESC
		),
		0
		) AS
		mfs_state,MAX(b.mfs_idx) AS
		mfs_idx,MAX(c.MFL_MANAGER) AS mfl_manager
		FROM sm_mf_proc a
		LEFT JOIN sm_mf_process_stop b ON a.OR_ID = b.OR_ID LEFT
		JOIN sm_mf_proc_log c ON a.or_id = c.or_id WHERE 1=1 AND a.mp_pr_state IN
		(0,1)
		<if test="searchKeyword != ''">
			AND or_id LIKE CONCAT('%',#{searchKeyword},'%')
		</if>
		GROUP BY a.or_id
		ORDER BY or_id DESC
		OFFSET #{firstIndex} ROWS
		FETCH
		NEXT
		#{recordCountPerPage} ROWS ONLY

	</select>

	<select id="selectMfManager" resultType="egovMap">
		select mi_name from
		sm_member_info
		where mi_department = '가공팀'
	</select>


	<select id="selectExistsLot" resultType="int">
		SELECT COUNT(*)
		FROM
		sm_product_order WHERE po_lotno = #{poLotno}
	</select>

	<select id="selectInfo" resultType="egovMap">
		SELECT a.po_lotno,
		b.pi_item_type,a.po_order_qty , a.po_state FROM
		sm_product_order a JOIN
		sm_product_info b ON a.PI_ID=b.PI_ID
		WHERE a.po_lotno = #{poLotno}
	</select>

	<select id="selectMfInfo" resultType="egovMap">
		SELECT * FROM sm_mf_proc a
		left JOIN sm_mf_proc_log b
		ON a.OR_ID = b.OR_ID
		WHERE a.or_id = #{orId}
	</select>

	<select id="selctExistsOn" resultType="int">
		SELECT COUNT(*) FROM
		sm_orders WHERE or_id = #{orId}
	</select>

	<select id="selectCheck" resultType="egovMap">
		SELECT a.ch_idx, a.in_idx,
		ch_state, ch_recycle, ch_reason, b.in_name
		FROM sm_insp_change a
		JOIN
		sm_incongruity b
		ON a.in_idx=b.in_idx
		WHERE a.ch_IDX = #{chIdx}
	</select>

	<select id="selectDetailManufacture" resultType="egovMap">
		SELECT in_name,
		ch_state, item_name, ti_name, wo_pdt_cnt, ch_recycle, ch_reason,
		DATE_FORMAT(ch_reg_dte, '%Y-%m-%d') AS ch_reg_dte
		FROM sm_insp_change a
		JOIN sm_incongruity b ON a.IN_IDX=b.IN_IDX
		JOIN sm_analysis_info c ON
		b.TI_IDX = c.TI_IDX
		JOIN sm_work_order d ON c.WO_IDX = d.WO_IDX
		JOIN
		sm_item e ON d.ITEM_CD = e.ITEM_CD
		WHERE a.CH_IDX = #{chIdx}
	</select>

	<select id="selectCheckStop" resultType="int">
		SELECT COUNT(*) FROM
		sm_mf_process_stop
		WHERE or_id = #{orId}
		AND mfs_state = 1
	</select>

	<insert id="registMfLog">
		INSERT INTO sm_mf_proc_log (
		or_id,
		mfl_manager,
		mfl_st_date,
		mfl_reg_id,
		mfl_reg_date,
		mfl_person
		) VALUES
		(
		#{orId},
		#{mflManager},
		GETDATE(),
		#{userId},
		GETDATE(),
		1
		)
	</insert>


	<insert id="registManufacture">
		INSERT INTO sm_mf_proc (
		or_id,
		mp_mfno,
		mp_prod_name,
		mp_reg_date,
		mp_texture,
		mp_thickness,
		mp_state,
		mp_standard,
		po_lotno,
		mp_qty,
		mp_note,
		mp_pr_state
		) VALUES
		(
		#{orId},
		#{mpMfno},
		#{mpProdName},
		#{mpRegDate},
		#{mpTexture},
		#{mpThickness},
		#{mpState},
		#{mpStandard},
		#{poLotno},
		#{mpQty},
		#{mpNote},
		0
		)
	</insert>

	<insert id="registMfStopLog">
		INSERT INTO sm_mf_process_stop (
		or_id,
		mfs_state,
		mfs_stop_time
		) VALUES
		(
		#{orId},
		1,
		GETDATE()
		)
	</insert>

	<update id="updateMfStopLog2">
		UPDATE sm_mf_process_stop SET
		mfs_state = 2,
		mfs_re_time = GETDATE(),
		MFS_REST_TIME = DATEDIFF(MINUTE,
		MFS_STOP_TIME, GETDATE())
		where mfs_idx
		= #{mfsIdx}
	</update>

	<update id="updateProcess3">
		UPDATE sm_mf_proc SET
		MP_PR_STATE = 2
		WHERE or_id
		=#{orId}
	</update>

	<update id="updateOrState">
		UPDATE sm_mf_proc SET
		MP_PR_STATE = 1
		WHERE or_id =
		#{orId}
	</update>

	<update id="modifyManufacture">
		UPDATE sm_mf_proc SET
		mp_mfno = #{mpMfno},
		mp_prod_name = #{mpProdName},
		mp_reg_date = #{mpRegDate},
		mp_texture = #{mpTexture},
		mp_thickness = #{mpThickness},
		mp_state = #{mpState},
		mp_standard =
		#{mpStandard},
		po_lotno = #{poLotno},
		mp_qty =
		#{mpQty},
		mp_note = #{mpNote}
		WHERE or_id = #{orId}
	</update>

	<update id="updateLogEdtime">
		UPDATE sm_mf_proc_log SET
		mfl_ed_date = GETDATE(),
		mfl_work_time =
		DATEDIFF(MINUTE,mfl_st_date,getdate())
		WHERE or_id =
		#{orId}
		AND mfl_idx
		= (
		SELECT TOP 1 mfl_idx
		FROM
		sm_mf_proc_log
		WHERE or_id
		= #{orId}
		ORDER BY
		mfl_idx DESC
		)
	</update>

	<update id="modifyMfManager">
		UPDATE sm_mf_proc_log SET
		mfl_manager = #{mflManager},
		mfl_person =
		#{mflPerson}
		WHERE or_id = #{orId} AND mfl_idx = (
		SELECT
		MAX(mfl_idx)
		FROM sm_mf_proc_log
		WHERE or_id = #{orId}
		)
	</update>

	<select id="outData" resultType="egovMap">
		SELECT a.OR_ID, a.OR_MANAGER,
		b.PO_LOTNO , CONVERT(VARCHAR(8), c.MFL_ED_DATE, 112) AS MFL_ED_DATE,
		mfl_manager from sm_orders a JOIN
		sm_release_info b ON a.OR_ID =
		b.OR_ID JOIN sm_mf_proc_log c ON a.OR_ID = c.OR_ID
		WHERE a.OR_ID =
		#{orId}
	</select>

	<select id="countFinish" resultType="int">
		SELECT COUNT(*) as total
		FROM sm_mf_proc_log
		WHERE CONVERT(DATE, mfl_ed_date) = CONVERT(DATE,
		GETDATE());

	</select>
	<update id="deleteManufacture">
		delete sm_mf_proc
		where or_id =
		#{orId}

	</update>
	<!-- <delete id="deleteManufacture"> -->

	<!-- Delete From sm_insp_change where ch_idx = #{chIdx} -->
	<!-- </delete> -->

</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper
	namespace="apc.sl.process.manufacture.service.impl.ManufactureMapper">

	<select id="selectManufactureListToCnt" resultType="int">
		SELECT COUNT(DISTINCT a.or_id) FROM sm_orders a
		LEFT JOIN
		sm_mf_process_stop b ON a.OR_ID = b.OR_ID
		WHERE 1=1
		AND or_process in (2,3)

		<if test="searchKeyword != ''">
			AND a.or_id LIKE CONCAT('%',#{searchKeyword},'%')
		</if>


	</select>

	<select id="selectManufactureList" resultType="egovMap">
		SELECT a.or_id ,MAX(a.or_prod) AS or_prod, MAX(a.or_qty) AS or_qty,
		MAX(a.or_process) AS or_process,
		ISNULL(
		(
		SELECT TOP 1 mfs_state
		FROM
		sm_mf_process_stop
		WHERE OR_ID = a.OR_ID
		ORDER BY mfs_idx DESC
		),
		0
		) AS
		mfs_state , MAX(b.mfs_idx) AS mfs_idx , MAX(c.mfl_manager) AS mfl_manager
		FROM sm_orders a
		LEFT JOIN
		sm_mf_process_stop b
		ON a.OR_ID =
		b.OR_ID
		LEFT JOIN
		sm_mf_proc_log c
		ON a.or_id = c.or_id
		WHERE 1=1
		AND or_process in (2,3)
		<if test="searchKeyword != ''">
			AND a.or_id LIKE CONCAT('%',#{searchKeyword},'%')
		</if>
		GROUP BY a.or_id
		ORDER BY a.or_id DESC
		OFFSET #{firstIndex} ROWS
		FETCH
		NEXT
		#{recordCountPerPage} ROWS ONLY

	</select>

	<select id="selectMfManager" resultType="egovMap">
	select mi_name from sm_member_info
	where mi_department = '가공부'
	</select>
	
	
	<select id="selectExistsLot" resultType="int">
	SELECT COUNT(*)
		FROM
		sm_product_order WHERE po_lotno = #{poLotno}
	</select>

	<select id="selectInfo" resultType="egovMap">
		SELECT a.po_lotno,
		b.pi_item_type,a.po_order_qty , a.po_state FROM
		sm_product_order a JOIN
		sm_product_info b ON a.PI_ID=b.PI_ID
		WHERE a.po_lotno = #{poLotno}
	</select>
	
	<select id="selectMfInfo" resultType="egovMap">
	SELECT * FROM sm_orders a
		left JOIN sm_mf_proc_log b
		ON a.OR_ID = b.OR_ID
		WHERE a.or_id = #{orId}
	</select>

	<select id="selctExistsOn" resultType="int">
		SELECT COUNT(*) FROM
		sm_orders WHERE or_id = #{orId}
	</select>

	<select id="selectCheck" resultType="egovMap">
		SELECT a.ch_idx, a.in_idx,
		ch_state, ch_recycle, ch_reason, b.in_name
		FROM sm_insp_change a
		JOIN
		sm_incongruity b
		ON a.in_idx=b.in_idx
		WHERE a.ch_IDX = #{chIdx}
	</select>

	<select id="selectDetailManufacture" resultType="egovMap">
		SELECT in_name,
		ch_state, item_name, ti_name, wo_pdt_cnt, ch_recycle, ch_reason,
		DATE_FORMAT(ch_reg_dte, '%Y-%m-%d') AS ch_reg_dte
		FROM sm_insp_change a
		JOIN sm_incongruity b ON a.IN_IDX=b.IN_IDX
		JOIN sm_analysis_info c ON
		b.TI_IDX = c.TI_IDX
		JOIN sm_work_order d ON c.WO_IDX = d.WO_IDX
		JOIN
		sm_item e ON d.ITEM_CD = e.ITEM_CD
		WHERE a.CH_IDX = #{chIdx}
	</select>
	
	<select id="selectCheckStop" resultType="int">
	SELECT COUNT(*) FROM
		sm_mf_process_stop
		WHERE or_id = #{orId}
		AND mfs_state = 1
	</select>
	
	<insert id="registMfLog">
	INSERT INTO sm_mf_proc_log (
		or_id,
		mfl_manager,
		mfl_st_date,
		mfl_reg_id,
		mfl_reg_date
		) VALUES
		(
		#{orId},
		#{mflManager},
		GETDATE(),
		#{userId},
		GETDATE()
		)
	</insert>


	<insert id="registManufacture">
		INSERT INTO sm_orders (
		or_id,
		or_company,
		or_prod,
		or_date,
		or_due_date,
		or_fin_date,
		or_or_type,
		or_texture,
		or_thickness,
		or_standard,
		or_state,
		or_manager,
		or_report,
		or_unit,
		or_money,
		or_qty,
		or_process
		) VALUES
		(
		#{orId},
		#{orCompany},
		#{orProd},
		#{orDate},
		#{orDueDate},
		#{orFinDate},
		#{orOrType},
		#{orTexture},
		#{orThickness},
		#{orStandard},
		#{orState},
		#{orManager},
		#{orReport},
		#{orUnit},
		#{orMoney},
		#{orQty},
		2
		)
	</insert>
	
	<insert id="registMfStopLog">
	INSERT INTO sm_mf_process_stop (
		or_id,
		mfs_state,
		mfs_stop_time
		) VALUES
		(
		#{orId},
		1,
		GETDATE()
		)
	</insert>
	
	<update id="updateMfStopLog2">
	UPDATE sm_mf_process_stop SET
		mfs_state = 2,
		mfs_re_time = GETDATE(),
		MFS_REST_TIME = DATEDIFF(MINUTE,
		MFS_STOP_TIME, GETDATE())
		where mfs_idx
		= #{mfsIdx}
	</update>
	
	<update id="updateProcess3">
	UPDATE sm_orders SET
		or_process = 4
		WHERE or_id
		=#{orId}
	</update>
	
	<update id="updateOrState">
	UPDATE sm_orders SET
		or_process = 3
		WHERE or_id =
		#{orId}
	</update>

	<update id="modifyManufacture">
		UPDATE sm_orders SET
		or_company = #{orCompany},
		or_prod = #{orProd},
		or_date = #{orDate},
		or_due_date = #{orDueDate},
		or_fin_date = #{orFinDate},
		or_or_type = #{orOrType},
		or_texture = #{orTexture},
		or_thickness = #{orThickness},
		or_standard = #{orStandard},
		or_state = #{orState},
		or_manager = #{orManager},
		or_report = #{orReport},
		or_unit = #{orUnit},
		or_money = #{orMoney},
		or_qty = #{orQty}
		WHERE or_id = #{orId}
	</update>
	
	<update id="updateLogEdtime">
	UPDATE sm_mf_proc_log SET
		mfl_ed_date = GETDATE(),
		mfl_work_time = DATEDIFF(MINUTE,mfl_st_date,getdate())
		WHERE or_id = #{orId}
		AND mfl_idx = (
		SELECT TOP 1 mfl_idx
		FROM
		sm_mf_proc_log
		WHERE or_id = #{orId}
		ORDER BY mfl_idx DESC
		)
	</update>
	
	<update id="modifyMfManager">
	UPDATE sm_mf_proc_log SET
		mfl_manager = #{mflManager}
		WHERE or_id = #{orId} AND mfl_idx = (
		SELECT MAX(mfl_idx)
		FROM sm_mf_proc_log
		WHERE or_id = #{orId}
		)
	</update>

<!-- 	<delete id="deleteManufacture"> -->

<!-- 		Delete From sm_insp_change where ch_idx = #{chIdx} -->
<!-- 	</delete> -->

</mapper>